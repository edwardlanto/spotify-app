{"version":3,"sources":["store.js","components/SongRow/index.js","components/Body/index.js","views/Login/index.js","components/Header/index.js","components/SidebarOption.js/index.js","components/Sidebar/index.js","components/Footer/index.js","App.js","serviceWorker.js","contexts/DataLayer.js","index.js"],"names":["initialState","current_playlist","currently_playing","spotify","store","createContext","Provider","StateProvider","children","useReducer","state","action","type","dispatch","value","SongRow","track","globalState","useContext","console","log","Grid","container","spacing","className","alignItems","direction","item","xs","IconButton","onClick","uri","play","uris","src","album","images","url","alt","name","artists","map","artist","join","release_date","millis","minutes","Math","floor","seconds","toFixed","millisToMinutesAndSeconds","duration_ms","Body","makeStyles","theme","root","flexGrow","paper","padding","textAlign","color","palette","text","secondary","fontSize","tracks","items","i","playSong","key","Login","class","href","margin","width","searchSpotify","e","target","Header","user","Input","onChange","startAdornment","InputAdornment","position","display_name","SidebarOption","title","Icon","Sidebar","playlists","HomeIcon","SearchIcon","LibraryMusicIcon","playlist","Footer","useStateWithCallback","is_playing","isPlaying","alert","pause","setIsPlaying","useEffect","md","aria-label","skipToPrevious","undefined","skipToNext","Spotify","App","useCookies","cookies","useState","authorized","setAuthorized","setUser","currentlyPlaying","setCurrentlyPlaying","setPlaylists","a","access_token","refresh_token","axios","post","setAccessToken","get","initialData","data","current_playing","checkAuth","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","CookiesProvider","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.65735ccb.chunk.js","sourcesContent":["// store.js\r\nimport React, { createContext, useReducer } from \"react\";\r\n\r\nconst initialState = {\r\n  current_playlist: [],\r\n  currently_playing: {},\r\n  spotify: null\r\n};\r\nconst store = createContext(initialState);\r\nconst { Provider } = store;\r\n\r\nconst StateProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer((state, action) => {\r\n    \r\n    // Dispatch starter data to other components \r\n    switch (action.type) {\r\n      case \"SET_CURRENT_PLAYLIST\":\r\n        return {\r\n          ...state,\r\n          current_playlist: action.current_playlist,\r\n        };\r\n      case \"SET_CURRENTLY_PLAYING\":\r\n        return {\r\n          ...state,\r\n          currently_playing: action.currently_playing,\r\n        };\r\n      case \"SET_SPOTIFY\":\r\n        return {\r\n          ...state,\r\n          spotify: action.spotify,\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }, initialState);\r\n\r\n  return <Provider value={{ state, dispatch }}>{children}</Provider>;\r\n};\r\n\r\nexport { store, StateProvider };\r\n","import React, { useContext } from \"react\";\r\nimport \"./index.css\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport PlayArrowIcon from \"@material-ui/icons/PlayArrow\";\r\nimport { store } from \"../../store.js\";\r\nimport axios from \"axios\";\r\n\r\nfunction SongRow({ track }) {\r\n  const globalState = useContext(store);\r\n  console.log('glboal state', globalState);\r\n  const { dispatch } = globalState;\r\n  const play = (uri) => {\r\n    globalState.state.spotify.play({\r\n      uris: [`${uri}`],\r\n    });\r\n\r\n    dispatch({\r\n      type:\"SET_CURRENTLY_PLAYING\",\r\n      currently_playing: track\r\n    })\r\n  };\r\n\r\n  const millisToMinutesAndSeconds = (millis) => {\r\n    var minutes = Math.floor(millis / 60000);\r\n    var seconds = ((millis % 60000) / 1000).toFixed(0);\r\n    return minutes + \":\" + (seconds < 10 ? \"0\" : \"\") + seconds;\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      spacing={1}\r\n      className=\"songRow\"\r\n      alignItems=\"center\"\r\n      direction=\"row\"\r\n    >\r\n      <Grid item xs={4}>\r\n        <IconButton onClick={() => play(track.uri)}>\r\n          <PlayArrowIcon />\r\n        </IconButton>\r\n        <img\r\n          className=\"songRow__album\"\r\n          src={track.album.images[0].url}\r\n          alt=\"\"\r\n        />\r\n        <div className=\"songRow__info\">\r\n          <h1>{track.name}</h1>\r\n          <p>{track.artists.map((artist) => artist.name).join(\", \")} - </p>\r\n        </div>\r\n      </Grid>\r\n      <Grid item xs={3} direction=\"row\" alignItems=\"center\">\r\n        {track.album.name}\r\n      </Grid>\r\n      <Grid item xs={3} direction=\"row\" alignItems=\"center\">\r\n        {track.album.release_date}\r\n      </Grid>\r\n      <Grid item xs={2} direction=\"row\" alignItems=\"center\">\r\n        {millisToMinutesAndSeconds(track.duration_ms)}\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default SongRow;\r\n","import React, { useEffect, useContext } from 'react';\r\nimport \"./index.css\";\r\nimport SongRow from \"../SongRow\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport { store } from '../../store.js';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nfunction Body() {\r\n  const globalState = useContext(store);\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n    },\r\n    paper: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'center',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n  }));\r\n\r\n  return (\r\n    <div className=\"body\">\r\n    <div className=\"body__info\">\r\n      <div className=\"body__infoText\">\r\n        <strong>PLAYLIST</strong>\r\n        <h2>{globalState.state.current_playlist?.name}</h2>\r\n      </div>\r\n    </div>\r\n    <div className=\"body__songs\">\r\n      <div className=\"body__icons\">\r\n        <FavoriteIcon fontSize=\"large\" />\r\n        <MoreHorizIcon />\r\n      </div>\r\n      <Grid container spacing={1} alignItems=\"center\">\r\n        <Grid item xs={4}>\r\n          Title\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          Artist\r\n        </Grid>\r\n        <Grid item xs={3}>\r\n          Release Date\r\n        </Grid>\r\n        <Grid item xs={2}>\r\n          Time\r\n        </Grid>\r\n      </Grid>\r\n      {globalState.state.current_playlist?.tracks?.items.map((item, i )=> (\r\n        <SongRow track={item.track} playSong key={i} />\r\n      ))}\r\n    </div> \r\n  </div>\r\n  );\r\n}\r\n\r\nexport default Body;","import React from 'react';\r\nimport './index.css';\r\n\r\nfunction Login(){\r\n    return(\r\n        <div class=\"login\">\r\n            <img src=\"https://storage.googleapis.com/pr-newsroom-wp/1/2018/11/Spotify_Logo_RGB_White.png\" alt=\"logo\"/>\r\n            {/* // Spotify Logo\r\n            \r\n            // Login Button */}\r\n            <a href=\"http://localhost:8888/login\">Login with Spotify</a>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;","import React, { useContext } from \"react\";\r\nimport \"./index.css\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Input from \"@material-ui/core/Input\";\r\nimport { store } from '../../store.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    \"& .MuiTextField-root\": {\r\n      margin: theme.spacing(1),\r\n      width: \"25ch\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n}));\r\n\r\nfunction searchSpotify(e){\r\n  console.log(e.target.value)\r\n}\r\n\r\nfunction Header({ user }) {\r\n  const globalStore = useContext(store);\r\n  const spotify = globalStore.state.spotify;\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header__left\">\r\n        <Input\r\n          className=\"input-with-icon-adornment\"\r\n          onChange={searchSpotify}\r\n          startAdornment={\r\n            <InputAdornment position=\"start\">\r\n              <SearchIcon />\r\n            </InputAdornment>\r\n          }\r\n        />\r\n      </div>\r\n      <div className=\"header__right\">\r\n        <h4>{user?.display_name}</h4>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport './index.css';\r\n\r\nfunction SidebarOption({ title, Icon }){\r\n    return (    \r\n    <div className=\"sidebarOption\">\r\n        {Icon && <Icon className=\"sidebarOption__icon\" />}\r\n        {title &&  <h4>{title}</h4> }\r\n    </div>)\r\n\r\n}\r\n\r\nexport default SidebarOption;","import React from \"react\";\r\nimport \"./index.css\";\r\nimport SidebarOption from \"../SidebarOption.js\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport LibraryMusicIcon from \"@material-ui/icons/LibraryMusic\";\r\n\r\nfunction Sidebar({playlists}) {\r\n  return (\r\n    <div className=\"sidebar\">\r\n      <img\r\n        src=\"https://getheavy.com/wp-content/uploads/2019/12/spotify2019-830x350.jpg\"\r\n        alt=\"logo\"\r\n        className=\"sidebar__logo\"\r\n      />\r\n      <SidebarOption title=\"Home\" Icon={HomeIcon} className=\"sidebar__icon\" />\r\n      <SidebarOption\r\n        title=\"Search\"\r\n        Icon={SearchIcon}\r\n        className=\"sidebar__icon\"\r\n      />\r\n      <SidebarOption\r\n        title=\"Your Library\"\r\n        Icon={LibraryMusicIcon}\r\n        className=\"sidebar__icon\"\r\n      />\r\n      <strong className=\"sidebar__title\">Playlists</strong>\r\n      <hr />\r\n      {playlists?.items && playlists.items.map((playlist) => {\r\n          return(\r\n            <SidebarOption title={playlist.name} key={playlist.name} />\r\n          );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useContext, useState } from \"react\";\r\nimport PlayCircleOutlineIcon from \"@material-ui/icons/PlayCircleOutline\";\r\nimport SkipPreviousIcon from \"@material-ui/icons/SkipPrevious\";\r\nimport SkipNextIcon from \"@material-ui/icons/SkipNext\";\r\nimport VolumeDownIcon from \"@material-ui/icons/VolumeDown\";\r\nimport PauseCircleOutlineIcon from \"@material-ui/icons/PauseCircleOutline\";\r\nimport PlaylistPlayIcon from \"@material-ui/icons/PlaylistPlay\";\r\nimport useStateWithCallback from \"use-state-with-callback\";\r\nimport { store } from \"../../store.js\";\r\nimport \"./index.css\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport { Grid } from \"@material-ui/core\";\r\nimport PauseIcon from \"@material-ui/icons/Pause\";\r\n\r\nfunction Footer({ currently_playing }) {\r\n\r\n  // Get spotify context\r\n  const globalState = useContext(store);\r\n\r\n  // Added callback method to setIsPlaying\r\n  const [isPlaying, setIsPlaying] = useStateWithCallback(\r\n    currently_playing?.is_playing,\r\n    (isPlaying) => {\r\n\r\n      // Checks if currently_play.is_playing is not null on FIRST render.\r\n      if (currently_playing?.is_playing !== null && globalState.state.spotify !== null){\r\n        alert(isPlaying)\r\n        if(isPlaying === true){\r\n          console.log('spotify', globalState.state.spotify);\r\n          console.log('cl shortcode', currently_playing)\r\n          \r\n          // Calls spotify API \r\n          // globalState.state.spotify.play({\r\n          //   uris: [`${currently_playing.item.uri}`],\r\n          // });\r\n        }else{\r\n          globalState.state.spotify.pause();\r\n        }\r\n      }\r\n    }\r\n  );\r\n\r\n  const next = () => {\r\n    globalState.state.spotify.skipToNext();\r\n  }\r\n\r\n  const previous = () => {\r\n    globalState.state.spotify.skipToPrevious();\r\n  }\r\n\r\n  useEffect(() => {\r\n    setIsPlaying(currently_playing?.is_playing)\r\n  }, []);\r\n\r\n  return (\r\n    <Grid container spacing={1} className=\"footer\">\r\n      <Grid item xs={12} md={3}>\r\n        <Grid container direction=\"row\">\r\n        <img\r\n          className=\"footer__album\"\r\n          src={currently_playing?.item?.album?.images[0].url}\r\n          alt=\"artist album\"\r\n        />\r\n        <Grid\r\n          className=\"songRow__info\"\r\n          direction=\"row\"\r\n          container\r\n          alignItems=\"center\"\r\n        >\r\n          <h6>{currently_playing?.item?.name}</h6>\r\n          <div>\r\n            <p>\r\n              {currently_playing?.item?.artists\r\n                .map((artist) => artist?.name)\r\n                .join(\", \")}{\" \"}\r\n              -{\" \"}\r\n            </p>\r\n          </div>\r\n        </Grid>\r\n      </Grid>\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        md={6}\r\n      >\r\n        <IconButton aria-label=\"previous\" onClick={previous}>\r\n          <SkipPreviousIcon />\r\n        </IconButton>\r\n        {isPlaying === true && isPlaying !== undefined ? (\r\n          <IconButton aria-label=\"pause\" onClick={() => setIsPlaying(false)}>\r\n            <PauseIcon />\r\n          </IconButton>\r\n        ) : (\r\n          <IconButton aria-label=\"play\" onClick={() => setIsPlaying(true)}>\r\n            <PlayCircleOutlineIcon />\r\n          </IconButton>\r\n        )}\r\n        <IconButton aria-label=\"next\">\r\n          <SkipNextIcon onClick={next} />\r\n        </IconButton>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport Body from \"./components/Body\";\r\nimport \"./index.css\";\r\nimport Login from \"./views/Login\";\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport Header from \"./components/Header\";\r\nimport Sidebar from \"./components/Sidebar\";\r\nimport Footer from \"./components/Footer\";\r\nimport axios from \"axios\";\r\nimport { useCookies } from \"react-cookie\";\r\nimport { store } from \"./store\";\r\nimport Spotify from 'spotify-web-api-js';\r\nlet spotify = new Spotify();\r\n\r\nfunction App() {\r\n  const [cookies, setCookie, removeCookie] = useCookies([\r\n    \"refresh_token\",\r\n    \"access_token\",\r\n  ]);\r\n  const [authorized, setAuthorized] = useState(null);\r\n  const [user, setUser] = useState({});\r\n  const [currentlyPlaying, setCurrentlyPlaying ] = useState(() => null);\r\n  const [playlists, setPlaylists] = useState([]);\r\n  const globalState = useContext(store);\r\n  const { dispatch } = globalState;\r\n\r\n  useEffect(() => {\r\n    const checkAuth = async () => {\r\n      if (!cookies.access_token || !cookies.refresh_token) {\r\n        setAuthorized(false);\r\n      } else {\r\n        axios.post(\"/refresh_token\", {\r\n          refresh_token: cookies.refresh_token,\r\n        });\r\n        setAuthorized(true);\r\n        if (cookies.access_token) {\r\n          spotify.setAccessToken(cookies.access_token);\r\n          const initialData = await axios.get(\"/spotify/me\");\r\n          setUser(initialData?.data?.user);\r\n          setPlaylists(initialData?.data?.playlists);\r\n          setCurrentlyPlaying(initialData?.data.current_playing)\r\n          console.log('Current DAT', initialData?.data.current_playing)\r\n          dispatch({\r\n            type: \"SET_CURRENT_PLAYLIST\",\r\n            current_playlist: initialData?.data.current_playlist,\r\n          });\r\n\r\n          dispatch({\r\n            type: \"SET_SPOTIFY\",\r\n            spotify\r\n          });\r\n        }\r\n      }\r\n    };\r\n    checkAuth();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      {authorized === false ? (\r\n        <Login />\r\n      ) : (\r\n        <>\r\n          <div class=\"app\">\r\n            <Header user={user} />\r\n            <Sidebar playlists={playlists} />\r\n            <div className=\"padding-block\"></div>\r\n            <Body />\r\n            <Footer currently_playing={currentlyPlaying} />\r\n          </div>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const DataLayerContext = createContext();\r\n\r\nexport const DataLayer = ({ initialState, reducer, children }) => (\r\n  <DataLayerContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </DataLayerContext.Provider>\r\n);\r\n\r\nexport const useDataLayerValue = () => useContext(DataLayerContext);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport { DataLayer } from \"./contexts/DataLayer\";\r\nimport { StateProvider } from './store.js';\r\nimport { CookiesProvider } from \"react-cookie\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StateProvider>\r\n      <CookiesProvider>\r\n        <App />\r\n      </CookiesProvider>\r\n    </StateProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}